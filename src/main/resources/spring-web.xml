<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd "> <!--当配置了mvc:annotation-driven/后，Spring就知道了我们启用注解驱动。然后 Spring通过context:component-scan/标签的配置，会自动为我们将扫描到的@Component， @Controller，@Service，@Repository等注解标记的组件注册到工厂中，来处理我们的请求-->
    <mvc:annotation-driven/>
    <!--在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，会在 Spring MVC上下文中定义一个 org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler， 它会像一个检查员， 对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web 应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 一般Web应用服务器默认的Servlet名称是"default"，因此 DefaultServletHttpRequestHandler可以找到它。如果你所有的Web应用服务器的默认Servlet 名称不是"default"，则需要通过default-servlet-name属性显示指定： <mvc:default-servlet-handler default-servlet-name="所使用的Web服务器默认使 用的Servlet名称" />-->
    <mvc:default-servlet-handler/> <!--扫描controller组件-->
    <context:component-scan
            base-package="com.edu.smxy.controller"></context:component-scan> <!--InternalResourceViewResolver作用是在Controller返回的时候进行解析视图-->


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!--prefix 这个表示目录-->
        <property name="prefix" value="/"></property> <!--suffix 这个表示后缀-->
        <property name="suffix" value=".jsp"></property>
    </bean>
</beans>